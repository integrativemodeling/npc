import re
import argparse
import os

import IMP
import IMP.core
#import IMP.base
import IMP.algebra
import IMP.atom
import IMP.container

import IMP.pmi1.tools


#####################################################
# Parsing parameter inputs
#####################################################
parser = argparse.ArgumentParser(description="Standardize the cross-links data set generated by Yi Shi int the Chait Group at the Rockefeller University. Example of usage: python PATH/crosslinks_dataset_2copies.py -f XL_CSV_FILE_standardized.csv")
parser.add_argument('-f', action="store", dest="csv_file", help="csv file name to read" )
inputs = parser.parse_args()

# Setting up the input parameters
if inputs.csv_file==None:
    print "\n[ERROR] Please select your CSV file.\nExample of usage: python PATH/crosslinks_dataset_2copies.py -f XL_CSV_FILE_standardized.csv\n"
    exit()
print inputs

columnmap={}
columnmap["Protein1"]="Protein 1"
columnmap["Protein2"]="Protein 2"
columnmap["Residue1"]="Residue 1"
columnmap["Residue2"]="Residue 2"
columnmap["IDScore"]="p value"
columnmap["XLUnique_id"]="XLUniqueID"
columnmap["etc1"]="etc1"
columnmap["etc2"]="etc2"
columnmap["etc3"]="etc3"
columnmap["etc4"]="etc4"
columnmap["etc5"]="etc5"
#columnmap["protein-protein"]="protein-protein"

protein1 = columnmap["Protein1"]
protein2 = columnmap["Protein2"]
residue1 = columnmap["Residue1"]
residue2 = columnmap["Residue2"]
idscore = columnmap["IDScore"]
xluniqueid = columnmap["XLUnique_id"]
etc1 = columnmap["etc1"]
etc2 = columnmap["etc2"]
etc3 = columnmap["etc3"]
etc4 = columnmap["etc4"]
etc5 = columnmap["etc5"]
#protein_protein = columnmap["protein-protein"]

xls=[]
xls.append(["Protein 1", "Residue 1", "Protein 2", "Residue 2", "p value", "XLUniqueID", "etc1", "etc2", "etc3", "etc4", "etc5"])
xlunique_id = 1
db = IMP.pmi1.tools.get_db_from_csv(inputs.csv_file)

for nxl, entry in enumerate(db):
    #print nxl, entry

    mol1 = entry[protein1]
    res1 = int(entry[residue1])
    mol2 = entry[protein2]
    res2 = int(entry[residue2])
    #s = entry[protein_protein]
    id_score = float(entry[idscore])
    xlunique_id = int(entry[xluniqueid])
    aetc1 = entry[etc1]
    aetc2 = entry[etc2]
    aetc3 = entry[etc3]
    aetc4 = entry[etc4]
    aetc5 = entry[etc5]

    if (mol1 == mol2) and (res1 == res2):
        xls.append([mol1+".1", res1, mol2+".2", res2, id_score, xlunique_id, aetc1, aetc2, aetc3, aetc4, aetc5])
        print mol1+".1", res1, mol2+".2", res2, id_score, xlunique_id
    else:
        xls.append([mol1, res1, mol2, res2, id_score, xlunique_id, aetc1, aetc2, aetc3, aetc4, aetc5])
        xls.append([mol1, res1, mol2+"@11", res2, id_score, xlunique_id, "", "", "", "", ""])
        #xls.append([mol1, res1, mol2+"@2", res2, id_score, xlunique_id, "", "", "", "", ""])
        #xls.append([mol1, res1, mol2+"@3", res2, id_score, xlunique_id, "", "", "", "", ""])

    #print (xls)
    #exit(0)
    """
    if (mol1 == "Dyn2") or (mol1 == "Nup82"):
        if (mol2 == "Dyn2") or (mol2 == "Nup82"):
            xls.append([mol1+".1", res1, mol2+".1", res2, id_score, xlunique_id])
            xls.append([mol1+".1", res1, mol2+".2", res2, id_score, xlunique_id])
            xls.append([mol1+".2", res1, mol2+".1", res2, id_score, xlunique_id])
            xls.append([mol1+".2", res1, mol2+".2", res2, id_score, xlunique_id])
        else:
            xls.append([mol1+".1", res1, mol2, res2, id_score, xlunique_id])
            xls.append([mol1+".2", res1, mol2, res2, id_score, xlunique_id])

    elif (mol2 == "Dyn2") or (mol2 == "Nup82"):
        xls.append([mol1, res1, mol2+".1", res2, id_score, xlunique_id])
        xls.append([mol1, res1, mol2+".2", res2, id_score, xlunique_id])

    else:
        xls.append([mol1, res1, mol2, res2, id_score, xlunique_id])
    """

import csv
with open(inputs.csv_file+'.ambiguity.csv', 'wb') as csvfile:
    csv_writer = csv.writer(csvfile)
    for x in xls:
        csv_writer.writerow(x)
